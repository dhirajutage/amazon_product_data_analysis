
create or replace procedure amazon.amazon_prod.proc_dim_product_ld()
returns varchar
language javascript

as     
$$  

try {

var step_num = 1
var step_desc = "Create temp table "
var sql_stmt = `create or replace temporary table amazon.amazon_prod.temp_dim_products as
select * from amazon.amazon_prod.vw_dim_products;`

var result = snowflake.execute({sqlText: sql_stmt })

var step_num = 1
var step_desc = "Merge with Target table "
var sql_stmt = `merge into amazon.amazon_prod.dim_products tar using
amazon.amazon_prod.temp_dim_products src
on tar.asin = src.asin
when matched and  ( tar.salesrank <> src.salesrank or
	tar.imurl <> src.imurl or
	tar.catergory_id <> src.id or
	tar.title <> tar.title or
	tar.description <> tar.description or
	tar.price  <> tar.price or
	tar.related <> tar.related or
	tar.brand <> tar.brand )
then update set tar.salesrank = src.salesrank ,
	tar.imurl = src.imurl ,
	tar.catergory_id = src.id ,
	tar.title = src.title ,
	tar.description = src.description ,
	tar.price  = src.price ,
	tar.related = src.related ,
	tar.brand = src.brand 
when not matched then 
insert (asin ,
	salesrank ,
	imurl ,
	catergory_id ,
	title ,
	description ,
	price ,
	related ,
	brand,
	start_date ,
	end_date ,
	is_active )
    values( src.asin ,
	src.salesrank ,
	src.imurl ,
	src.id ,
	src.title ,
	src.description ,
	src.price ,
	src.related ,
	src.brand,
	src.start_date ,
	src.end_date ,
	src.is_active );`

var result_1 = snowflake.execute({sqlText: sql_stmt })

return "Success"
}

catch (err)  {
 
 var error_code = err.code
 var error_message = err.err.message
return "Failure"
}

$$;